<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.1" halcon_version="17.12">
<procedure name="main">
<interface/>
<body>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2]" as_ord="1">list_files ('E:/gmm/photo/pictures/little 50s/gray', ['files','follow_links'], ImageFiles)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,3]" as_ord="1">tuple_regexp_select (ImageFiles, ['\\.(tif|tiff|gif|bmp|jpg|jpeg|jp2|png|pcx|pgm|ppm|pbm|xwd|ima|hobj)$','ignore_case'], ImageFiles)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,2]" as_ord="1">for Index := 0 to |ImageFiles| - 1 by 1</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,3]" as_ord="1">    read_image (Image, ImageFiles[Index])</l>
<l>*     rgb1_to_gray (Image, GrayImage)</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,4]" as_ord="1">    * Image Acquisition 01: Do something</c>
<l>    gray_projections ( Image,  Image, 'simple', HorProjection, VertProjection)</l>
<l>    cooc_feature_image ( Image, Image, 6, 0, Energy, Correlation, Homogeneity, Contrast)</l>
<l>    entropy_gray (Image, Image, Entropy, Anisotropy)</l>
<l>    area_center_gray (Image, Image, Area, Row, Column)</l>
<l>    gen_cooc_matrix (Image, Image, Matrix, 6, 0)</l>
<l>    cooc_feature_matrix (Matrix, Energy1, Correlation1, Homogeneity1, Contrast1)</l>
<l>    elliptic_axis_gray (Image, Matrix, Ra, Rb, Phi)</l>
<c>*     entropy_gray (, Matrix, Entropy1, Anisotropy1)</c>
<l>    entropy_image (Image, ImageEntropy, 9, 9)</l>
<l>    estimate_noise (Image, 'foerstner', 20, Sigma)</l>
<l>    fit_surface_first_order (Image,Image, 'regression', 5, 2, Alpha, Beta, Gamma)</l>
<l>    fit_surface_second_order (Image,Image, 'regression', 5, 2, Alpha1, Beta1, Gamma1, Delta, Epsilon, Zeta)</l>
<l>    fuzzy_entropy (Image,Image, 0, 255, Entropy1)</l>
<l>    fuzzy_perimeter (Image,Image, 0, 255, Perimeter)</l>
<l>    gray_features (Image,Image, 'mean', Value)</l>
<l>*     draw_rectangle1 (200000, Row1, Column1, Row2, Column2)</l>
<l>*     gen_rectangle1 (Rectangle, Row1, Column1, Row2, Column2)</l>
<l>    gray_histo (Image,Image, AbsoluteHisto, RelativeHisto)</l>
<l>    gray_histo_abs (Image,Image, 1, AbsoluteHisto1)</l>
<l>    gray_histo_range (Image,Image, 0, 255, 256, Histo, BinSize)</l>
<l>    histo_2dim (Image,Image, ImageEntropy, Histo2Dim)</l>
<l>    intensity (Image,Image, Mean, Deviation)</l>
<l>    min_max_gray (Image,Image, 0, Min, Max, Range)</l>
<l>    moments_gray_plane (Image,Image, MRow, MCol, Alpha2, Beta2, Mean1)</l>
<l>    plane_deviation (Image,Image, Deviation1)</l>
<c>*     select_gray (, Histo2Dim, SelectedRegions, 'mean', 'and', 128, 255)</c>
<l>    shape_histo_all (Image,Image, 'connected_components', AbsoluteHisto2, RelativeHisto1)</l>
<l>    shape_histo_point (Image,Image,'convexity', Row, Column, AbsoluteHisto3, RelativeHisto2)</l>
<l>    dev_display (Image)</l>
<l>    stop ()</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[3,1]" as_ord="1">endfor</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
